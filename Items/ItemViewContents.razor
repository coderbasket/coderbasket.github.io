
<div>
    <div class="row">
        @if (this.ProjectItems != null)
        {
            @foreach (var item in ProjectItems)
            {
                <ItemView ProjectRepo="item"></ItemView>
            }
        }
    </div>
    <div class="row pager">
        <div class="pagination-container">
            <ul class="pagination">
                <li @onclick="PreviousPage" class="PagedList-skipToPrevious">
                    <a href="/?page=@pageNumber" rel="prev">«</a>
                </li>
                <li @onclick="NextPage" class="PagedList-skipToNext">
                    <a href="/?page=@pageNumber" rel="next">»</a>
                </li>
            </ul>
        </div>
    </div>
</div>
@code {
    int pageNumber = 1;
    protected override void OnInitialized()
    {
        base.OnInitialized();

        DataServiceProvider.ItemsLoaded += (s, e) =>
        {
            RenderItems();
        };
        RenderItems();
    }

    async void RenderItems()
    {
        if (DataServiceProvider.ItemHasLoaded == false)
        {
            return;
        }
        var items = await DataServiceProvider.GetItemsAsync();
        if (items != null)
        {
            AllItems = items.Chunk(6).ToList();

            ProjectItems = AllItems[0];
            foreach (var item in this.ProjectItems)
            {
                RepoHelper.GetRepository(item);
            }
            pageNumber = 1;
            StateHasChanged();
        }
    }
    [Parameter]
    public ProjectItem[] ProjectItems { get; set; }
    [Parameter]
    public List<ProjectItem[]> AllItems { get; set; }


    void NextPage()
    {
        this.ProjectItems = this.AllItems.SkipWhile(x => x != this.ProjectItems).Skip(1).DefaultIfEmpty(this.AllItems[0]).FirstOrDefault();
        foreach (var item in this.ProjectItems)
        {
            RepoHelper.GetRepository(item);
        }
        pageNumber = AllItems.IndexOf(this.ProjectItems) + 1;
        StateHasChanged();
    }
    void PreviousPage()
    {
        this.ProjectItems = this.AllItems.TakeWhile(x => x != this.ProjectItems).DefaultIfEmpty(this.AllItems[this.AllItems.Count - 1]).FirstOrDefault();
        foreach (var item in this.ProjectItems)
        {
            RepoHelper.GetRepository(item);
        }
        pageNumber = AllItems.IndexOf(this.ProjectItems) + 1;
        StateHasChanged();
    }
   
}
